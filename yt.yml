trigger:
  branches:
    include:
      - main

variables:
  # Azure App Service Names
  frontendAppName: "youtube-clone-frontend"
  backendAppName: "youtube-clone-backend"

  # Azure Resource Group
  resourceGroup: "Raj"

  # Node and .NET versions
  nodeVersion: '22.17.0'
  dotnetVersion: '8.0.412'

stages:

# 1️⃣ Build Frontend
- stage: Build_Frontend
  displayName: Build Frontend
  jobs:
    - job: BuildReactApp
      pool:'Myagent'
      steps:
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: $(nodeVersion)
          displayName: 'Use Node.js $(nodeVersion)'

        - script: |
            cd frontend
            npm install
            npm run build
          displayName: 'Install and Build Frontend'

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: 'frontend/build'
            artifactName: 'frontend'

# 2️⃣ Build Backend
- stage: Build_Backend
  displayName: Build Backend
  jobs:
    - job: BuildBackend
      pool: 'Myagent'
      steps:
        - checkout: self

        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: $(dotnetVersion)
          displayName: 'Use .NET $(dotnetVersion)'

        - script: |
            cd backend
            dotnet restore
            dotnet build --configuration Release
            dotnet publish -c Release -o publish
          displayName: 'Build and Publish Backend'

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: 'backend/publish'
            artifactName: 'backend'

# 3️⃣ Deploy Frontend
- stage: Deploy_Frontend
  displayName: Deploy Frontend
  dependsOn: Build_Frontend
  jobs:
    - deployment: DeployReactApp
      environment: 'production'
      pool:'Myagent'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: frontend

              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'AzureRM-devop'
                  appName: $(frontendAppName)
                  package: '$(Pipeline.Workspace)/frontend'
                displayName: 'Deploy Frontend to Azure App Service'

# 4️⃣ Deploy Backend
- stage: Deploy_Backend
  displayName: Deploy Backend
  dependsOn: Build_Backend
  jobs:
    - deployment: DeployApi
      environment: 'production'
      pool: 'Myagent'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: backend

              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'AzureRM-devop'
                  appName: $(backendAppName)
                  package: '$(Pipeline.Workspace)/backend'
                displayName: 'Deploy Backend to Azure App Service'
