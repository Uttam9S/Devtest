trigger:
  branches:
    include:
      - main

variables:
  # Azure App Service Names
  frontendAppName: "youtube-clone-frontend"
  backendAppName: "youtube-clone-backend"

  # Azure Resource Group
  resourceGroup: "Raj"

  # Node and .NET versions
  nodeVersion: '22.17.0'
  dotnetVersion: '8.0.412'

stages:

# 1Ô∏è‚É£ Build Frontend
- stage: Build_Frontend
  displayName: Build Frontend
  jobs:
    - job: BuildReactApp
      pool:
        name: 'Myagent'
      steps:
        - checkout: self

        # üß≠ Debug - Confirm repo root contents after checkout
        - script: |
            echo "=== Debug: Repo root contents ==="
            dir $(Build.SourcesDirectory)
          displayName: 'Debug: Show Repo Root Contents'

        # üß≠ Debug - Confirm frontend folder exists before build
        - script: |
            echo "=== Debug: Frontend folder BEFORE build ==="
            dir $(Build.SourcesDirectory)/frontend
          displayName: 'Debug: Verify Frontend Folder Contents Before Build'

        - task: NodeTool@0
          inputs:
            versionSpec: $(nodeVersion)
          displayName: 'Use Node.js $(nodeVersion)'

        - script: |
            set -e
            npm install
            npm run build
          workingDirectory: '$(Build.SourcesDirectory)/frontend'
          displayName: 'Install and Build Frontend'

        # üß≠ Debug - Confirm build folder was created
        - script: |
            echo "=== Debug: Frontend folder AFTER build ==="
            dir $(Build.SourcesDirectory)/frontend
            echo "=== Debug: Build folder (should exist) ==="
            dir $(Build.SourcesDirectory)/frontend/build
          displayName: 'Debug: Show Frontend Build Folder'
          continueOnError: true

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: '$(Build.SourcesDirectory)/frontend/build'
            artifactName: 'frontend'
          displayName: 'Publish Frontend Build Artifact'


# 2Ô∏è‚É£ Build Backend
- stage: Build_Backend
  displayName: Build Backend
  jobs:
    - job: BuildBackend
      pool:
        name: 'Myagent'
      steps:
        - checkout: self

        # üß≠ Debug - Confirm backend folder exists before build
        - script: |
            echo "=== Debug: Backend folder BEFORE build ==="
            dir $(Build.SourcesDirectory)/backend
          displayName: 'Debug: Verify Backend Folder Contents Before Build'

        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: $(dotnetVersion)
          displayName: 'Use .NET $(dotnetVersion)'

        - script: |
            set -e
            dotnet restore
            dotnet build --configuration Release
            dotnet publish -c Release -o publish
          workingDirectory: '$(Build.SourcesDirectory)/backend'
          displayName: 'Build and Publish Backend'

        # üß≠ Debug - Confirm publish folder was created
        - script: |
            echo "=== Debug: Backend folder AFTER publish ==="
            dir $(Build.SourcesDirectory)/backend
            echo "=== Debug: Publish folder (should exist) ==="
            dir $(Build.SourcesDirectory)/backend/publish
          displayName: 'Debug: Show Backend Publish Folder'
          continueOnError: true

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: '$(Build.SourcesDirectory)/backend/publish'
            artifactName: 'backend'
          displayName: 'Publish Backend Build Artifact'


# 3Ô∏è‚É£ Deploy Frontend
- stage: Deploy_Frontend
  displayName: Deploy Frontend
  dependsOn: Build_Frontend
  jobs:
    - deployment: DeployReactApp
      environment: 'production'
      pool:
        name: 'Myagent'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: frontend

              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'AzureRM-devop'
                  appName: $(frontendAppName)
                  package: '$(Pipeline.Workspace)/frontend'
                displayName: 'Deploy Frontend to Azure App Service'


# 4Ô∏è‚É£ Deploy Backend
- stage: Deploy_Backend
  displayName: Deploy Backend
  dependsOn: Build_Backend
  jobs:
    - deployment: DeployApi
      environment: 'production'
      pool:
        name: 'Myagent'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: backend

              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'AzureRM-devop'
                  appName: $(backendAppName)
                  package: '$(Pipeline.Workspace)/backend'
                displayName: 'Deploy Backend to Azure App Service'
